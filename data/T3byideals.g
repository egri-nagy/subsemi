SubSgpsByIdeals := function(S,I)
  local mtS,mtI,mtT,mtSminusI, rfh,T,Tsubs,Isubs, emptyset,subs,realsubs,torsos;
  mtS := MulTab(S);
  emptyset := BlistList(Indices(mtS),[]);
  mtI := MulTab(I);
  #recoding the subsemigroups of ideal as subsgps of the original
  Isubs := List(AsList(SubSgpsBy1Extensions(mtI)),
              x->ReCodeIndicatorSet(x,SortedElements(mtI),SortedElements(mtS)));
  
  rfh := ReesFactorHomomorphism(I);
  T := Range(rfh); #T=S\I
  mtT := MulTab(T);
  subs := AsList(SubSgpsBy1Extensions(mtT));
  realsubs := List(subs, x->ElementsByIndicatorSet(x,SortedElements(mtT)));
  torsos := Unique(List(realsubs, x->RFHNonZeroPreImages(x,rfh)));
  Tsubs := List(torsos, x->IndicatorSetOfElements(x,SortedElements(mtS)));
  #x := Unique(List(blists, x->GenerateSg(Rows(mtorig),Indices(mtorig),ListBlist(Indices(mtorig),x)))); #the last parameter sucks
  Add(Isubs,emptyset);
  Add(Tsubs,emptyset);
  #taking the subsgps generated by the unions
  return Combiner(Tsubs, Isubs, mtS);
end;
